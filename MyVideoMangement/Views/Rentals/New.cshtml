@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>
<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" autocomplete="off" />
        </div>

    </div>
    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true" required type="text" value="" class="form-control" />
        </div>

    </div>
    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>



@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            let vm = {
                movieIds: []
            };

            let customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,

                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead(
                {
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'customers',
                    source: customers,   // suggestion engine is passed as the source
                    display: function (item) {        // display: 'name' will also work
                        return item.name;
                    },

                    limit: 3,
                    templates: {
                        empty: [
                            '<div class="list-group search-results-dropdown"><div class="list-group-item">Nothing found.</div></div>'
                        ],
                        pending: '<div class="list-group search-results-dropdown">Loading...</div>',
                        header: [
                            '<div class="list-group search-results-dropdown">'
                        ],
                        suggestion: function (item) {
                            return '<div class="list-group-item">' + item.name + " DOB: " + item.birthdate + '</div>';
                        }
                    }
                }).on("typeahead:select", function (e, customer) {
                    vm.customerId = customer.id;
                });


            let movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,

                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead(
                {
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'movies',
                    source: movies,   // suggestion engine is passed as the source
                    display: function (item) {        // display: 'name' will also work
                        return item.name;
                    },

                    limit: 3,
                    templates: {
                        empty: [
                            '<div class="list-group search-results-dropdown"><div class="list-group-item">Nothing found.</div></div>'
                        ],
                        pending: '<div class="list-group search-results-dropdown">Loading...</div>',

                        suggestion: function (item) {
                            return '<div class="list-group-item">' + item.name + '</div>';
                        }
                    }
                }).on("typeahead:select", function (e, movie) {

                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                    $("#movie").typeahead("val", "");
                    vm.movieIds.push(movie.id);
                });

            $.validator.addMethod("validCustomer",
                function () {
                    
                    return vm.customerId && vm.customerId !== 0;
                }, "Please select a valid customer");

            $.validator.addMethod("atLeastOneMovie",
                function() {
                    return vm.movieIds.length > 0;
                }, "Please select at least one movie");

            let validator = $("#newRental").validate({
                submitHandler: function () {
                    
                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(vm)
                    })
                        .done(function () {
                            toastr.success("Rental successfully recorded");
                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();

                            vm = { movieIds: [] };
                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.err("Something unexpected happened");
                        });

                    return false;
                }
            });
        });
    </script>
}