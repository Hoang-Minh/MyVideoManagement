@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>
<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <input id="customer" type="text" value="" class="form-control" autocomplete="off" />
    </div>
    <div class="form-group">
        <label>Movie</label>
        <input id="movie" type="text" value="" class="form-control" />
    </div>
    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>



@*<div id="search_loader"></div>*@

@section scripts
{
    <script>
        $(document).ready(function () {

            let customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead(
                {
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'customers',
                    source: customers,   // suggestion engine is passed as the source
                    display: function(item) {        // display: 'name' will also work
                        return item.name;
                    },
                    
                    limit: 3,
                    templates: {
                        notFound: '<div>Not Found</div>',
                        pending: '<div>Loading...</div>',
                        header: '<div>Found Records:</div>',
                        suggestion: function(item) {
                            return '<div>'+ item.name + " DOB: " + item.birthdate + '</div>';
                        }
                    }
                });

            
            

            //var countries_suggestions = new Bloodhound({
            //    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            //    queryTokenizer: Bloodhound.tokenizers.whitespace,
            //    remote: {
            //        url: 'https://restcountries.eu/rest/v2/alpha?codes=',
            //        prepare: function (query, settings) {
            //            $("#search_loader").fadeIn();     // display loader
            //            settings.url = this.url + query;
            //            return settings;
            //        },
            //        filter: function (data) {
            //            $("#search_loader").fadeOut();    // hide loader
            //            return data;
            //        }
            //    },
            //    identify: function (response) {
            //        return response.name;
            //    }
            //});

        });


    </script>
}